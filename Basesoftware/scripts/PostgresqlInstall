#!/bin/bash
#===============================================================================
#2020-03-02 by yangyuntian 
#===============================================================================

#===============================================================================
####postgresql安装####
#===============================================================================

#pg_workN子函数为调用过程中，以su pgadmin执行相应命令。
function pg_work1
{
    echo "cd /var/lib/pgsql/${postgresql_version}"
    echo "mkdir data"
    echo "source ~pgadmin/.bash_profile"
    echo "initdb -D '${PGDATA}' -A trust"
    echo "exit"
}

function pg_work2
{
    echo "cd /var/lib/pgsql"
    echo "source ~pgadmin/.bash_profile"
    echo "exit"
}

function pg_work3
{
    echo "cd /var/lib/pgsql"
    echo "mkdir data"
    echo "source ~pgadmin/.bash_profile"
    echo "initdb -D '$PGDATA' -A trust"
    echo "exit"
}

#指定服务器的本机地址、授权访问数据库的服务器地址
function IpAuthorizedVisit
{
	trust_IP_address=$(whiptail --title "指定服务器的本机地址、授权访问数据库的服务器地址" --inputbox "\n注意：（多个IP用';'分隔，并附加掩码长度。举例：10.10.11.2/32;10.10.11.3/24）\n" 20 80 --fb --backtitle  "${back_title}" 3>&1 1>&2 2>&3)
	exitstatus=$?
	OLD_IFS="$IFS"
	IFS=";"
	Array=(${trust_IP_address})
	IFS="${OLD_IFS}"
	if [ ${exitstatus} == 0 ]; then
		for ips in ${Array[@]}
		do
			echo "host    all         all         ${ips}       trust" >> ./pg_hba.conf
		done
	fi
}

#===============================================================================
##centos7系统版本安装###
#===============================================================================

function PostgresqlInstall_centos7
{
# 安装路径：/usr/local/src/postgresql...
# 删除旧的postgresql残余文件
    rm -rf /usr/local/src/postgresql*
	rm -rf /var/lib/pgsql
	rm -rf /usr/local/pgsql

# 1. 安装postgres数据库系统
    yes|rpm -ivh ${installPath}/postgresql/bzip2-1.0.6-13.el7.x86_64.rpm >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    cp  ${installPath}/postgresql/postgresql-${postgresql_version}.tar.bz2 /usr/local/src/postgresql-${postgresql_version}.tar.bz2 >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    cd /usr/local/src 
    tar xvfj postgresql-${postgresql_version}.tar.bz2 >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ProgressBar10
    cd postgresql-${postgresql_version} >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ./configure --prefix=/usr/local/pgsql --with-odbc --without-readline --without-zlib &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    make &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ProgressBar30
    make install &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    chown -R pgadmin.pgadmin /usr/local/pgsql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ProgressBar50

# 1.1 安装contrib中的项目
# 1.1.1 安装dblink （UA/UC必须！！）
    cd /usr/local/src/postgresql-${postgresql_version}/contrib/dblink >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    make &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    make install &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 2 安装应用程序模式：
    mkdir /var/lib/pgsql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    chown -R pgadmin.pgadmin /var/lib/pgsql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 修改~pgadmin/.bash_profile，增加如下内容
    echo "PGLIB=/usr/local/pgsql/lib" >>~pgadmin/.bash_profile
    echo "PGDATA=/var/lib/pgsql/${postgresql_version}/data" >>~pgadmin/.bash_profile
    echo "PATH=\$PATH:/usr/local/pgsql/bin" >>~pgadmin/.bash_profile
    echo "MANPATH=\$MANPATH:/usr/local/pgsql/man" >>~pgadmin/.bash_profile
    echo "export PGLIB PGDATA PATH MANPATH" >>~pgadmin/.bash_profile

#此处需要使用su pgadmin进行操作。
    pg_work1 | su pgadmin >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 3 系统服务安装
# 将postgresql.service文件复制到/usr/lib/systemd/system/
    chmod +x ${installPath}/postgresql/postgresql.service >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    yes|cp ${installPath}/postgresql/postgresql.service /usr/lib/systemd/system/postgresql.service >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
	sed -i "s/Environment=PGDATA=\/var\/lib\/pgsql\/9.3.0\/data\//Environment=PGDATA=\/var\/lib\/pgsql\/${postgresql_version}\/data\//" /usr/lib/systemd/system/postgresql.service >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 4. 把这个脚本设置成系统启动时自动执行，系统关闭时自动停止：
    systemctl enable postgresql &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 此处有检验内容，需要特别注意.(检验)(检验)
    systemctl start postgresql &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ProgressBar80

# 5 修改配置文件
    cd /var/lib/pgsql/${postgresql_version}/data >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 修改postgresql.conf。
# 1.修改listen_address = 'localhost'--->listen_address = '*'
    sed -i 's/#listen_address/listen_address/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    sed -i '59 s/localhost/*/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 2.修改#log_destination = 'stderr'--->log_destination = 'stderr' ……此处提供的手册有错误。
    sed -i 's/#log_destination/log_destination/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 3.修改#redirect_stderr = off--->redirect_stderr = on
    sed -i 's/#redirect_stderr = off/redirect_stderr = on/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 4.是否将日志重定向至文件中
	sed -i 's/\#logging_collector \= off/logging_collector \= on/g' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 5.修改#log_directory = 'pg_log' --->log_directory = 'pg_log'
    sed -i 's/#log_directory/log_directory/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 6.修改#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'--->log_filename = 'postgresql-%Y-%m-%d.log'
    sed -i 's/#log_filename/log_filename/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 修改pg_hba.conf
# 此处与已有的服务器内容不一致，需多加注意，查看的dell2850为127.0.0.1/24且未做如下更改。
# 修改host  all   all   127.0.0.1/32    trust--->host  all   all   ***.***.***.***/masklen    trust
    cp pg_hba.conf pg_hba.conf_bak >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    sed -i '74,85 d' ./pg_hba.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    IpAuthorizedVisit
    more +84 pg_hba.conf_bak >>./pg_hba.conf
    rm -f pg_hba.conf_bak >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

#此处需要使用su pgadmin进行操作。
    pg_work2 | su pgadmin >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 6 重新启动 postgresql，检验过程。
    systemctl restart postgresql &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 7 建立psql连接
    ln -s --target-directory=/home/pgadmin /usr/local/pgsql/bin/psql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ln -s /usr/local/pgsql/bin/psql /usr/bin/psql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

    chown -R pgadmin.pgadmin /home/pgadmin >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
#检查postgresql启动情况
    echo  "#------Postgresql安装情况------#" >> ${installlogsPath}/VerificationResult-${Date}.log
    systemctl status postgresql |grep -w Active |awk '{sub(/^[ \t]+/,"");print $0}' &>> ${installlogsPath}/VerificationResult-${Date}.log
    echo -e "\n" >> ${installlogsPath}/VerificationResult-${Date}.log
    echo -e "安装进度: \n"
    ProgressBar100
    sleep 2
    Msgbox "postgresql安装完成"
}
#===============================================================================
##centos6系统版本安装###
#===============================================================================

function PostgresqlInstall_centos6
{

# 安装路径：/usr/local/src/postgresql...

# 删除旧的postgresql残余文件
    rm -rf /usr/local/src/postgresql*
	
# 1. 安装postgres数据库系统
    yes|rpm -ivh ${installPath}/postgresql/bzip2-1.0.6-13.el7.x86_64.rpm >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    yes|cp  ${installPath}/postgresql/postgresql-${postgresql_version}.tar.bz2 /usr/local/src/postgresql-${postgresql_version}.tar.bz2 >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    cd /usr/local/src
    tar xvfj postgresql-${postgresql_version}.tar.bz2 >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ProgressBar10
    cd postgresql-${postgresql_version} >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ./configure --prefix=/usr/local/pgsql --with-odbc --without-readline --without-zlib &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ProgressBar30
    make &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ProgressBar50
    make install &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    chown -R pgadmin.pgadmin /usr/local/pgsql
    ProgressBar80
# 1.1 安装contrib中的项目
# 1.1.1 安装dblink （UA/UC必须！！）
    cd /usr/local/src/postgresql-${postgresql_version}/contrib/dblink >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    make &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    make install &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
#cd /usr/local/pgsql/share/contrib >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
#more /usr/local/pgsql/share/contrib/dblink.sql | $pgsqlbin/psql postgres -U pgadmin &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 2 安装应用程序模式：
    mkdir /var/lib/pgsql >>${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    chown -R pgadmin.pgadmin /var/lib/pgsql ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 修改~pgadmin/.bash_profile，增加如下内容
    echo "PGLIB=/usr/local/pgsql/lib" >>~pgadmin/.bash_profile
    echo "PGDATA=/var/lib/pgsql/data" >>~pgadmin/.bash_profile
    echo "PATH=\$PATH:/usr/local/pgsql/bin" >>~pgadmin/.bash_profile
    echo "MANPATH=\$MANPATH:/usr/local/pgsql/man" >>~pgadmin/.bash_profile
    echo "export PGLIB PGDATA PATH MANPATH" >>~pgadmin/.bash_profile

#此处需要使用su pgadmin进行操作。
    pg_work3 | su pgadmin >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 3 系统服务安装
# 将postgresql文件复制到 /etc/rc.d/init.d
    chmod +x ${installPath}/postgresql/postgresql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    yes|cp ${installPath}/postgresql/postgresql /etc/rc.d/init.d/postgresql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 4. 把这个脚本设置成系统启动时自动执行，系统关闭时自动停止：
    chkconfig --add postgresql

# 此处有检验内容，需要特别注意.(检验)(检验)
    /etc/rc.d/init.d/postgresql start >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
#    /etc/rc.d/init.d/postgresql stop >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
 
# 5 修改配置文件
    cd /var/lib/pgsql/data >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 修改postgresql.conf。
# 1.修改listen_address = 'localhost'--->listen_address = '*'
    sed -i 's/#listen_address/listen_address/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    sed -i '56 s/localhost/*/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 2.修改#log_destination = 'stderr'--->log_destination = 'stderr' ……此处提供的手册有错误。
    sed -i 's/#log_destination/log_destination/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 3.修改#redirect_stderr = off--->redirect_stderr = on
    sed -i 's/#redirect_stderr = off/redirect_stderr = on/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 4.是否将日志重定向至文件中
	sed -i 's/\#logging_collector \= off/logging_collector \= on/g' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 5.修改#log_directory = 'pg_log' --->log_directory = 'pg_log'
    sed -i 's/#log_directory/log_directory/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
# 6.修改#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'--->log_filename = 'postgresql-%Y-%m-%d.log'
    sed -i 's/#log_filename/log_filename/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    sed -i '239 s/%d_%H%M%S/%d/' ./postgresql.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 修改pg_hba.conf
# 此处与已有的服务器内容不一致，需多加注意，查看的dell2850为127.0.0.1/24且未做如下更改。
# 修改host  all   all   127.0.0.1/32    trust--->host  all   all   ***.***.***.***/masklen    trust
    yes|cp pg_hba.conf pg_hba.conf_bak >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    sed -i '74,75 d' ./pg_hba.conf >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    IpAuthorizedVisit 
    more +74 pg_hba.conf_bak >>./pg_hba.conf 
    rm -f pg_hba.conf_bak 

#此处需要使用su pgadmin进行操作。
    pg_work2 | su pgadmin >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 6 重新启动 postgresql，检验过程。
    /etc/rc.d/init.d/postgresql restart &>> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1

# 7 建立psql连接
    ln -s --target-directory=/home/pgadmin /usr/local/pgsql/bin/psql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    ln -s /usr/local/pgsql/bin/psql /usr/bin/psql >> ${installlogsPath}/PostgresqlRunning-${Date}.log 2>&1
    chown -R pgadmin.pgadmin /home/pgadmin
#echo "postgresql_install is done"
    echo  "#------Postgresql安装情况------#" >> ${installlogsPath}/VerificationResult-${Date}.log
    service postgresql status >> ${installlogsPath}/VerificationResult-${Date}.log
    echo -e "\n" >> ${installlogsPath}/VerificationResult-${Date}.log
    echo -e "安装进度: \n"
    ProgressBar100
    sleep 2
    Msgbox "postgresql安装完成"
}
